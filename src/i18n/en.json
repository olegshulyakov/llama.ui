{
  "welcomeScreen": {
    "welcome": "Hi,",
    "welcomeNote": "how can I help you?"
  },
  "header": {
    "title": {
      "noChat": "New Chat",
      "settings": "Settings"
    },
    "buttons": {
      "newConv": "New",
      "settings": "Settings"
    },
    "ariaLabels": {
      "newConv": "New conversation",
      "settings": "Open settings menu"
    }
  },
  "footer": {
    "ariaDesc": "Disclaimer",
    "disclaimer": "The content is generated by AI. It may be inaccurate."
  },
  "sidebar": {
    "groups": {
      "Today": "Today",
      "Yesterday": "Yesterday",
      "Previous 7 Days": "Previous 7 Days",
      "Previous 30 Days": "Previous 30 Days"
    },
    "buttons": {
      "closeSideBar": "Close sidebar",
      "more": "More",
      "rename": "Rename",
      "download": "Download",
      "delete": "Delete",
      "clear": "Clear"
    },
    "ariaLabels": {
      "dropdown": "More options",
      "select": "Select conversation: {{name}}",
      "more": "Show more options",
      "rename": "Rename conversation",
      "download": "Download conversation",
      "delete": "Delete conversation",
      "clear": "Clear search"
    },
    "errors": {
      "renameOnGenerate": "Cannot rename conversation while generating.",
      "downloadOnGenerate": "Cannot download conversation while generating.",
      "deleteOnGenerate": "Cannot delete conversation while generating."
    },
    "actions": {
      "newName": "Enter new name for the conversation",
      "deleteConfirm": "Are you sure to delete this conversation?",
      "deleteSuccess": "Conversation deleted."
    },
    "searchPlaceHolder": "Search",
    "storageNote": "Conversations are saved to browser's IndexedDB."
  },
  "chatScreen": {
    "labels": {
      "system": "System",
      "user": "You",
      "cancel": "Cancel",
      "send": "Send",
      "save": "Save",
      "thinking": "Thinking",
      "thoughts": "Thoughts"
    },
    "actions": {
      "delete": {
        "confirm": "Are you sure to delete this message?"
      }
    },
    "titles": {
      "previous": "Previous",
      "next": "Next",
      "regenerate": "Regenerate",
      "copy": "Copy",
      "run": "Run",
      "edit": "Edit",
      "delete": "Delete",
      "branchChat": "Branch chat",
      "play": "Play",
      "stop": "Stop",
      "performance": "Performance"
    },
    "ariaLabels": {
      "messageUserRole": "Message from user",
      "messageAssistantRole": "Message from assistant",
      "codeBlock": "Code block",
      "codeLanguage": "Code language",
      "siblingLeafs": "Message version {{current}} of {{total}}",
      "switchToPrevious": "Switch to the previous message version",
      "switchToNext": "Switch to the next message version",
      "regenerateResponse": "Regenerate response",
      "showPerformanceMetric": "Show performance metric",
      "copyContent": "Copy content",
      "runCode": "Run code",
      "editMessage": "Edit message",
      "deleteMessage": "Delete message",
      "branchChatAfterMessage": "Branch chat after this message",
      "playMessage": "Play message",
      "stopMessage": "Stop message",
      "uploadFile": "Upload file",
      "thoughtDisplay": "Toggle thought process display",
      "thoughtContent": "Thought process content"
    }
  },
  "chatInput": {
    "placeholder": "Type your message... (Shift+Enter to add a new line)",
    "errors": {
      "emptyMessage": "Please enter a message"
    },
    "item": {
      "clickToShow": "Click to show: {{name}}",
      "extraContentName": "Extra content"
    },
    "previewDialog": {
      "closeButton": "Close preview dialog",
      "audioNotSupported": "Your browser does not support the audio element."
    },
    "ariaLabels": {
      "chatInput": "Chat input",
      "uploadFile": "Upload file",
      "send": "Send message",
      "fileItems": "Selected files",
      "removeButton": "Remove file",
      "documentIcon": "Document icon",
      "previewDialog": "Preview {{name}}"
    }
  },
  "modals": {
    "cancelBtnLabel": "Cancel",
    "confirmBtnLabel": "Confirm",
    "submitBtnLabel": "Submit",
    "okBtnLabel": "OK"
  },
  "dropdown": {
    "chooseEntity": "Choose {{entity}}",
    "searchPlaceholder": "Search {{entity}}s...",
    "noOptions": "No options found"
  },
  "fileUpload": {
    "errors": {
      "fileTooLarge": "File is too large. Maximum size is 500MB.",
      "multimodalNotSupported": "Multimodal is not supported by this server or model.",
      "videoNotSupported": "Video files are not supported yet.",
      "audioNotSupported": "Only mp3 and wav audio files are supported.",
      "pdfMultimodalNotSupported": "Multimodal is not supported, PDF will be converted to text instead of image.",
      "fileIsBinary": "File is binary. Please upload a text file.",
      "failedToReadFile": "Failed to read file.",
      "failedToGetCanvasContext": "Failed to get 2D canvas context.",
      "failedToLoadSvg": "Failed to load SVG image. Ensure the SVG data is valid."
    },
    "notifications": {
      "pdfConvertedToText": "PDF file converted to text. You can also convert it to image, see in Settings."
    },
    "errorProcessingFile": "Error processing file: {{message}}",
    "errorConvertingSvg": "Error converting SVG to PNG: {{message}}"
  },
  "codeRunner": {
    "canvasPyInterpreter": {
      "title": "Python Interpreter",
      "output": {
        "loading": "Loading Pyodide...",
        "running": "Running..."
      }
    },
    "buttons": {
      "close": "Close",
      "run": "Run",
      "stop": "Stop"
    },
    "links": {
      "reportBug": "Report a bug"
    }
  },
  "settings": {
    "tabs": {
      "general": "General",
      "ui": "UI",
      "voice": "Voice",
      "conversations": "Conversations",
      "presets": "Presets",
      "importExport": "Import/Export",
      "advanced": "Advanced"
    },
    "sections": {
      "inferenceProvider": "Inference Provider",
      "userInterface": "User Interface",
      "textToSpeech": "Text to Speech",
      "chat": "Chat",
      "performance": "Performance",
      "reasoning": "Reasoning",
      "generation": "Generation",
      "samplers": "Samplers",
      "penalties": "Penalties",
      "custom": "Custom",
      "experimental": "Experimental"
    },
    "parameters": {
      "language": {
        "label": "Language",
        "note": "User interface display language."
      },
      "provider": {
        "label": "Provider",
        "note": "Provider may charge for usage."
      },
      "baseUrl": {
        "label": "Base URL",
        "note": "Set the Base URL if you are using standalone server."
      },
      "apiKey": {
        "label": "API Key",
        "note": "Set the API Key if you are using --api-key option for the server."
      },
      "model": {
        "label": "Model",
        "note": "Set the inference model."
      },
      "systemMessage": {
        "label": "System Message (will be disabled if left empty)",
        "note": "The starting message that defines how model should behave. You can get examples from <a class=\"underline\" href=\"https://prompts.chat/\" target=\"_blank\" rel=\"noopener noreferrer\">Awesome ChatGPT Prompts</a>"
      },
      "initials": {
        "label": "User Name",
        "note": ""
      },
      "showRawUserMessage": {
        "label": "Display user messages raw",
        "note": "Markdown processing will be disabled for user messages."
      },
      "showRawAssistantMessage": {
        "label": "Display model messages raw",
        "note": "Markdown processing will be disabled for model messages."
      },
      "pasteLongTextToFileLen": {
        "label": "Paste: limitation",
        "note": "When pasting a long text, it will be converted into a file. You can control the file length by setting the value of this parameter. Set to 0 to disable."
      },
      "pdfAsImage": {
        "label": "Use PDF as image instead of text",
        "note": "Attach the PDF as an image instead of text. Supported only with multimodal models with vision support."
      },
      "showTokensPerSecond": {
        "label": "Show performance metrics",
        "note": "Activate to see the processing speed, times, etc."
      },
      "showThoughtInProgress": {
        "label": "Expand thinking section",
        "note": "Expand thinking message when generating messages"
      },
      "excludeThoughtOnReq": {
        "label": "Exclude thinking messages on submit",
        "note": "Exclude thinking messages when sending requests to API (recommended)"
      },
      "overrideGenerationOptions": {
        "label": "Override Generation Options",
        "note": ""
      },
      "temperature": {
        "label": "",
        "note": "Controls the randomness of the generated text by affecting the probability distribution of the output tokens. Higher = more random, lower = more focused."
      },
      "top_k": {
        "label": "",
        "note": "Keeps only k top tokens."
      },
      "top_p": {
        "label": "",
        "note": "Limits tokens to those that together have a cumulative probability of at least p."
      },
      "min_p": {
        "label": "",
        "note": "Limits tokens based on the minimum probability for a token to be considered, relative to the probability of the most likely token."
      },
      "max_tokens": {
        "label": "",
        "note": "The maximum number of tokens per output."
      },
      "overrideSamplersOptions": {
        "label": "Replace Samplers Options",
        "note": ""
      },
      "samplers": {
        "label": "",
        "note": "The order at which samplers are applied, in simplified way. Default is \"dkypmxt\": dry->top_k->typ_p->top_p->min_p->xtc->temperature"
      },
      "dynatemp_range": {
        "label": "",
        "note": "Addon for the temperature sampler. The added value to the range of dynamic temperature, which adjusts probabilities by entropy of tokens."
      },
      "dynatemp_exponent": {
        "label": "",
        "note": "Addon for the temperature sampler. Smoothes out the probability redistribution based on the most probable token."
      },
      "typical_p": {
        "label": "",
        "note": "Sorts and limits tokens based on the difference between log-probability and entropy."
      },
      "xtc_probability": {
        "label": "",
        "note": "XTC sampler cuts out top tokens; this parameter controls the chance of cutting tokens at all. 0 disables XTC."
      },
      "xtc_threshold": {
        "label": "",
        "note": "XTC sampler cuts out top tokens; this parameter controls the token probability that is required to cut that token."
      },
      "overridePenaltyOptions": {
        "label": "Replace Penalty Options",
        "note": ""
      },
      "repeat_last_n": {
        "label": "",
        "note": "Last n tokens to consider for penalizing repetition"
      },
      "repeat_penalty": {
        "label": "",
        "note": "Controls the repetition of token sequences in the generated text"
      },
      "presence_penalty": {
        "label": "",
        "note": "Limits the tokens based on whether they appear in the output or not."
      },
      "frequency_penalty": {
        "label": "",
        "note": "Limits the tokens based on how often they appear in the output."
      },
      "dry_multiplier": {
        "label": "",
        "note": "DRY sampling reduces repetition in generated text even across long contexts. This parameter sets the DRY sampling multiplier."
      },
      "dry_base": {
        "label": "",
        "note": "DRY sampling reduces repetition in generated text even across long contexts. This parameter sets the DRY sampling base value."
      },
      "dry_allowed_length": {
        "label": "",
        "note": "DRY sampling reduces repetition in generated text even across long contexts. This parameter sets the allowed length for DRY sampling."
      },
      "dry_penalty_last_n": {
        "label": "",
        "note": "DRY sampling reduces repetition in generated text even across long contexts. This parameter sets DRY penalty for the last n tokens."
      },
      "custom": {
        "label": "Custom JSON config",
        "note": "For more info, refer to <a class=\"underline\" href=\"https://github.com/ggerganov/llama.cpp/blob/master/tools/server/README.md\" target=\"_blank\" rel=\"noopener noreferrer\">server documentation</a>"
      },
      "pyIntepreterEnabled": {
        "label": "Enable Python interpreter",
        "note": "This feature uses <a class=\"underline\" href=\"https://pyodide.org\" target=\"_blank\" rel=\"noopener noreferrer\">pyodide</a>, downloaded from CDN. To use this feature, ask the LLM to generate Python code inside a Markdown code block. You will see a \"Run\" button on the code block, near the \"Copy\" button."
      },
      "ttsPitch": {
        "label": "Pitch",
        "note": "The pitch at which the utterance will be spoken at."
      },
      "ttsRate": {
        "label": "Rate",
        "note": "The speed at which the utterance will be spoken at."
      },
      "ttsVoice": {
        "label": "Voice",
        "note": "The voice that will be used to speak the utterance."
      },
      "ttsVolume": {
        "label": "Volume",
        "note": "The volume that the utterance will be spoken at."
      },
      "experimental": {
        "note": "<p>Experimental features are not guaranteed to work correctly.</p><p>If you encounter any problems, create a <a class=\"underline\" href=\"https://github.com/olegshulyakov/llama.ui/issues/new?template=010-bug.yml\" target=\"_blank\" rel=\"noopener noreferrer\">Bug</a> report on Github. Please also specify <b>experimental</b> on the report title and include screenshots.</p><p>Some features may require packages downloaded from CDN, so they need internet connection.</p>"
      }
    },
    "textToSpeech": {
      "check": {
        "label": "Check",
        "text": "This is a demo of Web Speech Synthesis."
      }
    },
    "presetManager": {
      "newPreset": "Save the current settings as a preset",
      "savedPresets": "Existing presets",
      "noPresetFound": "No presets yet.",
      "modals": {
        "enterNewPresetName": "Enter a new preset name",
        "presetAlreadyExists": "Preset \"{{presetName}}\" already exists, overwrite it?",
        "enterNewName": "Enter a new name",
        "loadPresetConfirm": "Load preset \"{{presetName}}\"? Current settings will be replaced.",
        "deletePresetConfirm": "Delete preset \"{{presetName}}\"?"
      },
      "buttons": {
        "save": "Create preset",
        "load": "Load",
        "more": "More",
        "rename": "Rename",
        "delete": "Delete"
      },
      "labels": {
        "created": "Created:"
      },
      "ariaLabels": {
        "save": "Create new preset",
        "load": "Load preset",
        "more": "Show more actions",
        "rename": "Rename preset",
        "delete": "Delete preset"
      }
    },
    "themeManager": {
      "dataTheme": {
        "label": "Theme",
        "note": "Choose the color theme of the application."
      },
      "syntaxTheme": {
        "label": "Syntax Theme",
        "note": "Choose the color theme for the code blocks."
      }
    },
    "importExport": {
      "chatsSectionTitle": "Chats",
      "exportBtnLabel": "Export",
      "importBtnLabel": "Import",
      "technicalDemoSectionTitle": "Technical Demo",
      "importDemoConversationBtnLabel": "Import demo conversation"
    },
    "actionButtons": {
      "fetchModels": "Fetch Models",
      "saveBtnLabel": "Save",
      "cancelBtnLabel": "Close",
      "resetBtnLabel": "Reset"
    },
    "footer": {
      "version": "Application Version: {{version}}",
      "storageNote": "Settings are saved in browser's localStorage."
    }
  },
  "toast": {
    "newVersion": {
      "title": "🎉 New version available",
      "description": "Update for the latest features & fixes.",
      "note": "Your conversations will be saved, but don't forget to make a backup before update.",
      "submitBtnLabel": "Update",
      "cancelBtnLabel": "Later"
    },
    "welcomePopup": {
      "title": "👋 Welcome",
      "description": "It looks like you don't have the models set up yet. Let's go to the Settings to configure your Inference provider.",
      "note": "",
      "submitBtnLabel": "Open Settings",
      "cancelBtnLabel": "Skip"
    },
    "noModelsPopup": {
      "title": "😔 No Models Found",
      "description": "It looks like you don't have the models set up yet or there is an issue with your Provider. Let's go to the Settings to check.",
      "note": "",
      "submitBtnLabel": "Open Settings",
      "cancelBtnLabel": "Skip"
    }
  },
  "state": {
    "database": {
      "import": {
        "failed": "Database import failed.",
        "completed": "Database import completed."
      },
      "export": {
        "failed": "Database export failed.",
        "completed": "Database export completed."
      }
    },
    "preset": {
      "saved": "Preset is saved successfully.",
      "removed": "Preset is removed successfully."
    },
    "inference": {
      "errors": {
        "providerError": "Inference Provider: {{message}}."
      }
    },
    "chat": {
      "errors": {
        "conversationNotFound": "Current conversation is not found",
        "messagesNotFound": "Current messages are not found",
        "unknownError": "Unknown error",
        "unknownErrorDuringGeneration": "Unknown error during generation",
        "cannotSaveMessage": "Cannot save message.",
        "failedToGetResponse": "Failed to get response from AI.",
        "failedToBranchConversation": "Failed to branch conversation."
      }
    }
  },
  "samplePrompts": [
    "Tell me a fun fact for today.",
    "Tell me a joke.",
    "Give me three interesting science facts.",
    "List the planets in our solar system.",
    "Explain the rules of chess.",
    "What are some good conversation starters?",
    "Give 10 gift ideas for best friend.",
    "Write a birthday message for my friend.",
    "Suggest themes for a birthday party.",
    "Give me ideas for a game night.",
    "Give me ideas for a weekend getaway.",
    "Tips for my first solo trip.",
    "Explain a complex concept simply.",
    "Fix the grammar in this text.",
    "Summarize the following text.",
    "Rewrite this to be more formal/casual.",
    "Help me write a professional email.",
    "Create a schedule for my workday.",
    "Summarize these meeting notes.",
    "Give me ideas for a team building activity."
  ]
}
